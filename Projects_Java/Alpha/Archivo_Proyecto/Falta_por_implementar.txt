Proyecto de gestion de inventarios

/*/ -- Lo que ya hay implementado
1. Registro de productos:
   - La clase `Productos` y las funcionalidades de agregar, modificar y eliminar productos ya están implementadas.
   
2. Control de stock:
   - El sistema permite modificar cantidades y precios, además de verificar el stock bajo mediante la clase `alertaStock`.

3. Alertas de stock mínimo:
   - La clase `alertaStock` ya verifica productos con stock bajo y muestra alertas.

4. Generación de reportes de inventario:
   - La clase `ReporteDeInventario` genera reportes detallados del inventario.

5. Exportación e importación de inventario:
   - Ya se pueden exportar e importar datos en formato CSV.



/*/ --- Falta por implementación (Segun lo pedido en la ficha de proyecto)

1. Registro de proveedores:
   - No hay una clase o funcionalidad para gestionar proveedores. 
   - Sugerencia: Crear una clase `Proveedor` con atributos como nombre, contacto y productos suministrados. También puedes agregar métodos para registrar, modificar y listar proveedores.

   ```java
   class Proveedor {
       private String nombre;
       private String contacto;
       private List<String> productosSuministrados;

       public Proveedor(String nombre, String contacto) {
           this.nombre = nombre;
           this.contacto = contacto;
           this.productosSuministrados = new ArrayList<>();
       }

       public void agregarProducto(String producto) {
           productosSuministrados.add(producto);
       }

       public List<String> getProductosSuministrados() {
           return productosSuministrados;
       }

       // Otros métodos como getters, setters, y mostrar información
   }
   ```

2. Movimientos de inventario:
   - No hay un registro de movimientos de inventario (ingresos o retiros de productos).
   - Sugerencia: Crear una clase `MovimientoInventario` para registrar cada movimiento con atributos como producto, cantidad, tipo de movimiento (ingreso/retiro) y fecha.

   ```java
   class MovimientoInventario {
       private String producto;
       private int cantidad;
       private String tipoMovimiento; // "Ingreso" o "Retiro"
       private Date fecha;

       public MovimientoInventario(String producto, int cantidad, String tipoMovimiento) {
           this.producto = producto;
           this.cantidad = cantidad;
           this.tipoMovimiento = tipoMovimiento;
           this.fecha = new Date();
       }

       // Métodos para obtener detalles del movimiento
   }
   ```

3. Gráficos de análisis de tendencias:
   - No hay implementación para gráficos que analicen tendencias de inventario.
   - Sugerencia: Usar una biblioteca como **JFreeChart** para generar gráficos de barras o líneas que muestren tendencias de stock o movimientos de productos. (Segun Copilot seria una buena opcion para este proyecto)

4. Mejoras en la interfaz de usuario:
   - Actualmente, el sistema funciona en consola. Podrías considerar implementar una interfaz gráfica (GUI) usando **JavaFX** o **Swing** para mejorar la experiencia del usuario. (Este apartado tampoco lo he planeado aun, las recomendacion es por parte de Copilot en base al analisis del proyecto)

/*/ --- Resumen de lo que falta:
- Registro y gestión de proveedores.
- Registro de movimientos de inventario (ingresos/retiros).
- Implementación de gráficos para análisis de tendencias.
- Opcional: Mejorar la interfaz de usuario con una GUI.
